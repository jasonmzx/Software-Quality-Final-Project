def app
pipeline {
  tools {
    maven 'maven'
    dockerTool 'docker'
  }
  agent {
        docker {
            image 'docker:dind'
            args '-u root:root -p 3000:3000 --privileged -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
  stages {
    stage ('Clone Repository') {
        steps {
            checkout scm
        }
    }
    stage ('Pre-Image Test') {
      steps {
        sh 'mvn clean test -f ./SOFE3980U_Final_Project/pom.xml'
      }
    }
    stage ("Build JAR") {
        steps {
            sh 'mvn package -DskipTests -f ./SOFE3980U_Final_Project/pom.xml'
        }
    }
    stage ('Build Docker Image') {
        steps {
            sh 'cp ./SOFE3980U_Final_Project/Dockerfile "/var/jenkins_home/workspace/Final Project Pipeline/Dockerfile"'
            script {
                app = docker.build("softwarequality/flightbooker")
            }
        }
    }
    stage ("Push Image") {
        steps {
            script {
                docker.withRegistry('https://softwarequalityfinalproject.azurecr.io', 'docker-registry-creds') {
                    app.push("${env.BUILD_NUMBER}")
                    app.push("latest")
                }
            }
        }
    }
    stage ('Deploy') {
      steps {
        kubernetesDeploy (
            configs: './deployment.yaml',
            kubeconfigId: 'my-kubeconfig'
        )
      }
    }
  }
}